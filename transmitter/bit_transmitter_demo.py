import pigpio
import time

# ====== 請在此直接填入要發送的 bits（例：'101100...864bits'）======
bit_string這裡換成你自己的 0/1 串
BIT_DURATION = 0.076   # 80 ms/bit
GPIO_PIN = 18         # LED接在GPIO18

# ===============================================================

pi = pigpio.pi()
if not pi.connected:
    print("pigpio daemon 未啟動！")
    exit(1)

pi.set_mode(GPIO_PIN, pigpio.OUTPUT)

print("將開始依序發送 bits...")
for idx, bit in enumerate(bit_string):
    if bit == '1':
        pi.write(GPIO_PIN, 1)
    else:
        pi.write(GPIO_PIN, 0)
    # print(f"第{idx+1}位 bit={bit} 已發送")
    time.sleep(BIT_DURATION)

# 結束時關燈
pi.write(GPIO_PIN, 0)
pi.stop()
print("發送完畢")